<?xml version="1.0" encoding="UTF-8"?>

<!-- status : 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出 ,默认OFF
    monitorInterval : Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数。
    %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
    %p : 日志输出格式
    %c : logger的名称
    %m : 日志内容，即 logger.info("message")
    %n : 换行符
    %C : Java类名
    %L : 日志输出所在行数
    %M : 日志输出所在方法名
    hostName : 本地机器名 hostAddress : 本地ip地址 -->

<Configuration status="debug" strict="true">

    <properties>
        <property name="LOG_HOME">${sys:catalina.home}/logs/</property>
    </properties>
    <Appenders>
        <!--这个输出控制台的配置 -->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY"/>
            <!-- 输出日志的格式 -->
            <PatternLayout pattern="%d{DEFAULT} %c{1} %p [%t] %m%n"/>
        </Console>

    </Appenders>

    <!--定义logger，只有定义了logger并引入的appender，appender才会生效 -->
    <Loggers>
        <!-- 配置日志的根节点，建立一个默认的root的logger，需要在root的level中指定输出的级别  -->
        <Root level="info">
            <AppenderRef ref="asyncAppLog"/>
        </Root>
        <AsyncLogger name="logger.error" level="info" additivity="false">
            <AppenderRef ref="asyncErrorLog"/>
        </AsyncLogger>
    </Loggers>
</Configuration>